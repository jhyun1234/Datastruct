#pragma once
#include <iostream>
using namespace std;

// template <typename T> 

#pragma region 해시 테이블
// Key,Value 로 데이터를 저장하는 자료 구조 중 하나로
// 빠르게 데이터를 검색할 수 있는 자료 구조이다.

// 해시 테이블의 평균 시간 복잡도는 O(1)이다.

// <해시 충돌을 해결하는 방법>
// (1) 체이닝 기법
// 각 해시 버켓을 연결 리스트로 구성하는 방식이다.
// 해시 충돌 발생 시 동일한 해시 값에 해당하는 데이터들을
// 연결 리스트로 연결하여 저장한다.

// (2) 개방 주소법
// 충돌 발생 시 빈 버켓에 데이터를 저장하는 방식이다.
// 빈 버켓을 어떻게 결정할 지에 따라 구현 방식이 달라진다.

// 선형 탐사 : 충돌 발생 시 앞에서 부터 차례대로 빈 버켓을 찾아
//           값을 저장하는 방식이다.

// 이차 탐사 : 충돌 발생 시 2^,2^3 만큼 떨어진 빈 버킷을 찾아
//            값을 저장하는 방식이다.

// 이중 해싱 : 해시 값을 한번 더 해시 함수에 넣어 다른 함수를 
//            도출하는 방식이다.

#pragma endregion
